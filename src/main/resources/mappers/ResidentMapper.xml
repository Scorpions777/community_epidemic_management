<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.epidemic.mapper.ResidentMapper" >
  <resultMap id="BaseResultMap" type="com.example.epidemic.entity.Resident" >
    <id column="resident_id" property="residentId" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="TINYINT" />
    <result column="id_card" property="idCard" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="check_in_time" property="checkInTime" jdbcType="DATE" />
    <result column="address_id" property="addressId" jdbcType="VARCHAR" />
    <result column="community_name" property="communityName" jdbcType="VARCHAR" />
    <result column="building_number" property="buildingNumber" jdbcType="VARCHAR" />
    <result column="room_number" property="roomNumber" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR"/>
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    resident_id
    , name, gender, id_card, phone, check_in_time, r.address_id, a.community_name,
    a.building_number, a.room_number, remark, status, password
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.epidemic.entity.ResidentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from resident as r LEFT JOIN address AS a ON a.address_id = r.address_id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from resident as r LEFT JOIN address AS a ON a.address_id = r.address_id
    where resident_id = #{residentId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from resident
    where resident_id = #{residentId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.epidemic.entity.ResidentExample" >
    delete from resident as r LEFT JOIN address AS a ON a.address_id = r.address_id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.epidemic.entity.Resident" >
    insert into resident (resident_id, name, gender,
                          id_card, phone, check_in_time,
                          address_id, remark, status)
    values (#{residentId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=TINYINT},
            #{idCard,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{checkInTime,jdbcType=DATE},
            #{addressId,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.epidemic.entity.Resident" >
    insert into resident
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="residentId != null" >
        resident_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="idCard != null" >
        id_card,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="checkInTime != null" >
        check_in_time,
      </if>
      <if test="addressId != null" >
        address_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="residentId != null" >
        #{residentId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="idCard != null" >
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="checkInTime != null" >
        #{checkInTime,jdbcType=DATE},
      </if>
      <if test="addressId != null" >
        #{addressId,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.epidemic.entity.ResidentExample" resultType="java.lang.Integer" >
    select count(*) from resident as r LEFT JOIN address AS a ON a.address_id = r.address_id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update resident
    <set >
      <if test="record.residentId != null" >
        resident_id = #{record.residentId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.idCard != null" >
        id_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.checkInTime != null" >
        check_in_time = #{record.checkInTime,jdbcType=DATE},
      </if>
      <if test="record.addressId != null" >
        address_id = #{record.addressId,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update resident
    set resident_id = #{record.residentId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=TINYINT},
      id_card = #{record.idCard,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      check_in_time = #{record.checkInTime,jdbcType=DATE},
      address_id = #{record.addressId,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.epidemic.entity.Resident" >
    update resident
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="idCard != null" >
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="checkInTime != null" >
        check_in_time = #{checkInTime,jdbcType=DATE},
      </if>
      <if test="addressId != null" >
        address_id = #{addressId,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where resident_id = #{residentId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.epidemic.entity.Resident" >
      update resident
      set name            = #{name,jdbcType=VARCHAR},
          gender          = #{gender,jdbcType=TINYINT},
          id_card         = #{idCard,jdbcType=VARCHAR},
          phone           = #{phone,jdbcType=VARCHAR},
          check_in_time   = #{checkInTime,jdbcType=DATE},
          address_id      = #{addressId,jdbcType=VARCHAR},
          remark          = #{remark,jdbcType=VARCHAR},
          status          = #{status,jdbcType=INTEGER},
          password        = #{password,jdbcType=VARCHAR}
      where resident_id = #{residentId,jdbcType=VARCHAR}
  </update>
</mapper>